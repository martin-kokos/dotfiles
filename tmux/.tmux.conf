# Setting the prefix from C-b to C-a
set -g prefix C-a
# Free the original Ctrl-b prefix keybinding
unbind C-b
#setting the delay between prefix and command
set -s escape-time 5
# Set the base index for windows to 1 instead of 0
set -g base-index 1
# Set the base index for panes to 1 instead of 0
set -g pane-base-index 1
# Autoname windows
set-option -g status-interval 1
set-option -g automatic-rename on
set-option -g automatic-rename-format "#{?#{==:#{pane_current_command},bash},#{b:pane_current_path},#{pane_current_command}}"

# Set bind key to reload configuration file
bind r source-file ~/.tmux.conf \; display ​"Reloaded!"

# splitting panes with | and -
bind | split-window -h
bind - split-window -v

# Renumber windows/tabs on window close
set-option -g renumber-windows on

# Enable mouse support
set -g mouse on

# Set vi as the default editor
set -g status-keys vi

# allow listening to focus events, neovim recommendation
set-option -g focus-events on

# Bind vim-like pane selection
bind -n C-h select-pane -L
bind -n C-j select-pane -D
bind -n C-k select-pane -U
bind -n C-l select-pane -R

# Set more history buffer
set -g history-limit 100000

# Sync tmux copy/paste buffer with X nd-key -T copy-mode-vi v send-keys -X begin-selection
setw -g mode-keys vi
set-option -s set-clipboard off
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X rectangle-toggle
unbind -T copy-mode-vi Enter
#bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'xclip -se c -i'
#bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'xclip -se c -i'

#bind-key ] run "xsel -o -p | tmux load-buffer - ; tmux paste-buffer" # [p]rimary buffer is blue mouse selection
#bind-key \} run "xsel -o -b | tmux load-buffer - ; tmux paste-buffer" # clip[b]oard buffer is Ctrl+C
# Sync tmux copy/paste buffer with Wayland buffer
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "wl-copy"
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "wl-copy"
bind-key ] run "wl-paste -n | tmux load-buffer - ; tmux paste-buffer" # [p]rimary buffer is blue mouse selection

#urxvt tab like window switching (-n: no prior escape seq)
bind -n S-down new-window
bind -n S-left prev
bind -n S-right next
bind -n C-left swap-window -t -1 \; prev
bind -n C-right swap-window -t +1 \; next

# mouse scrolling
bind -T root WheelUpPane   if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
bind -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"

# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session
bind-key a send-prefix

#  Activity monitoring
setw -g monitor-activity on
set -g visual-activity off

# How to use true colors in vim under tmux? #1246 for 2.6 and higher
# https://github.com/tmux/tmux/issues/1246:
set -g default-terminal "tmux-256color"
set-option -ga terminal-features ',*256col*:Tc'
set-option -sa terminal-overrides ',alacritty:Tc'

# Status line
set-option -g status-position top
set -g status-interval 4
set -g status-justify left # align window list
set -g status-left-length 8 # window list left margin
set -g status-right-length 10
set -g status-style 'fg=black,bg=colour69'
set -g status-left '  •••  '
set -g window-status-activity-style 'fg=colour231,bg=colour69'
set -g status-right '#[fg=black,bg=colour69]#(tmux-mem-cpu-load)'
set-window-option -g window-status-current-style fg=colour111,bg=black

# Plugins

# List of plugins
set -g @plugin 'tmux-plugins/tpm' # tmux plugin manager
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# Plugin options

# autmatic restore on startup
set -g @continuum-restore 'on'
# let tmux-resurrect restore pane contents
set -g @resurrect-capture-pane-contents 'on'
# let tmux-resurrect save neovim sessions via vim-obsession plugin
set -g @resurrect-strategy-nvim 'session'
